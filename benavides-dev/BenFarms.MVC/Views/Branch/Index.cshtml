@model BenavidesFarm.DataModels.Models.Pages.BranchPage
@{
    ViewBag.Title = "Sucursales";
    ViewBag.Page = "Branch";

    var estados = (IEnumerable<SelectListItem>)ViewBag.Estados;
}

@*<style>
        #map_canvas img {
            max-width: none;
        }
    </style>*@

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
@*<style>
        .infoDiv {
            height: 100px;
            width: 200px;
            -webkit-user-select: none;
            background-color: white;
        }
    </style>*@

@*async defer*@
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA-CRfk8RhTz7Lsu9OEhUTsILKokv2sHfE&sensor=true">
</script>
<link href="~/Content/css/ben.css" rel="stylesheet" />
<div id="main-carousel" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        <li data-target="#carousel-id" data-slide-to="0" class="active"></li>
    </ol>
    <div class="carousel-inner">
        @{
            <div class="item active">
                <img src="@Url.Content(Model.HeadImages[0].ImageSectionImage)">
                <div class="container">
                    @{
                        var color1 = "#000000";
                        if (!string.IsNullOrEmpty(Model.HeadImages[0].ImageSectionColorText))
                        {
                            color1 = Model.HeadImages[0].ImageSectionColorText;
                        }
                    }
                    <div class="carousel-caption">
                        <h1 style="color: @Html.Raw(color1)">@Model.HeadImages[0].ImageSectionText</h1>
                    </div>
                </div>
            </div>
                        for (int i = 1; i < Model.HeadImages.Count; i++)
                        {
                            var color = "#000000";
                            if (!string.IsNullOrEmpty(Model.HeadImages[i].ImageSectionColorText))
                            {
                                color = Model.HeadImages[i].ImageSectionColorText;
                            }
                            <div class="item">
                                <img src="@Url.Content(Model.HeadImages[i].ImageSectionImage)">
                                <div class="container">
                                    <div class="carousel-caption">
                                        <h1 style="color: @Html.Raw(color)">@Model.HeadImages[i].ImageSectionText</h1>
                                    </div>
                                </div>
                            </div>
                        }
        }
    </div>
    <a class="left carousel-control" href="#carousel-id" data-slide="prev"><span class="glyphicon glyphicon-chevron-left"></span></a>
    <a class="right carousel-control" href="#carousel-id" data-slide="next"><span class="glyphicon glyphicon-chevron-right"></span></a>
</div>
<div class="container-fluid margin-bottom-200 no-padding">
    <div class="row full-width">
        @using (Html.BeginForm("Search", "Branch", FormMethod.Get, new { id = "searchForm" }))
        {
            <div id="branch-offices" class="col-xs-12 col-sm-6 col-md-6 text-center">
                <div id="header-branch-offices" class="margin-bottom-20">
                    <h1 class="color-blue">
                        <b>¿Dónde te encuentras?</b>
                    </h1>
                    <div class="row">
                        <div class="col-md-2 col-sm-2 hidden-xs"></div>
                        <div class="col-md-4 col-sm-4 col-xs-6">
                            @Html.DropDownList("State", estados, new { @class = "form-control", id = "selectState" })
                            @*<select class="form-control">
                                    <option>Seleccione Estado</option>
                                </select>*@
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-6">

                            @Html.DropDownList("City", new List<SelectListItem>(), new { @class = "form-control", id = "selectCities" })
                            @*<select class="form-control" id="selectCities" name="City">
                                    <option>Seleccione Ciudad</option>
                                </select>*@

                        </div>
                    </div>
                    <div class="row error" id="errorMessagesPanel" style="visibility:hidden">
                        <div class="col-md-2 col-sm-2 hidden-xs"></div>
                        <div class="col-md-10 col-sm-10 col-xs-12">
                            <h5 class="text-left f18">Debe seleccionar una cuidad.</h5>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 col-sm-2 hidden-xs"></div>
                        <div class="col-md-10 col-sm-10 col-xs-12">
                            <p class="color-blue text-left f18">Sucursales con:</p>
                            <p>&nbsp;</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 col-sm-2 hidden-xs"></div>
                        <div class="col-md-5 col-sm-5 col-xs-6">
                            <label class="checkbox-inline"><input type="checkbox" name="BranchConsult" checked="checked"><span class="iconconsultorio color-blue">Consultorio Médico</span></label>

                        </div>
                        <div class="col-md-5 col-sm-5 col-xs-6">
                            <label class="checkbox-inline"><input type="checkbox" name="Branch24Hours" checked="checked"><span class="icon24 color-blue">24 hrs</span></label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-11 col-sm-11 col-xs-11">
                            <p>&nbsp;</p>
                            <p class="color-blue text-right">
                                <button id="searchButton" style="padding:0; border:none"><img src="~/Content/rsc/imgs/btnbuscar.png"></button>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div id="gmap" class="col-xs-12 col-sm-6 col-md-6 full-width margin-bottom-40 gmaps-content">
            <div id="map_canvas" style="height: 400px;"></div>
        </div>
    </div>
</div>

@section scripts {
    <section class="scripts">

        <script type="text/javascript">

            $(document).ready(function() {
                var stateSelectionControl = $("#selectState");
                stateSelectionControl.change(function () {
                    var stateId = this.value;
                    var base = getSiteRootUrl();

                    $.ajax({
                        url: base + '/Branch/GetCities/' + stateId,
                        data: { id: stateId },
                        cache: false,
                        type: "GET",
                        async: true,
                        success: function (data) {
                            var cities = $('#selectCities');
                            cities.empty(); // remove any existing options
                            var markup = "<option value='0'>Seleccione Ciudad</option>";
                            for (var i = 0; i < data.length; i++)
                            {
                                markup += "<option value=" + data[i].Value + ">" + data[i].Text + "</option>";
                            }

                            cities.html(markup).show();
                        },
                        error: function (reponse) {
                            alert("error : " + reponse);
                        }
                    });

                });
                stateSelectionControl.trigger("change");

                submitFormButton = $("#searchButton");
                submitFormButton.on("click", function (event) {
                    var cityIndex = $("select[id='selectCities'] option:selected").index();
                    var itemCount = $('#selectCities').children('option').length;

                    console.log("index: " + cityIndex);
                    console.log("items: " + itemCount);

                    if (cityIndex < 1 || cityIndex >= itemCount)
                    {
                        errorMessagesPanel = $("#errorMessagesPanel");
                        //errorMessagesPanel.show();
                        errorMessagesPanel.css('visibility', 'visible');
                        return false;
                    }
                    else
                    {
                        $("#searchForm").submit();
                    }
                    return true;
                });

                Initialize();
            });

            //function chargecities

            // Where all the fun happens
            function Initialize() {

                var dataArray = [];
                //var base = GetUrlBase();
                var base = getSiteRootUrl();

                // Google has tweaked their interface somewhat - this tells the api to use that new UI
                google.maps.visualRefresh = true;
                //var Tunisie = new google.maps.LatLng(25.67507, -100.31847);

                // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
                var mapOptions = {
                    zoom: 5,
                    center: { lat: 23.67507, lng: -96.31847 },
                    mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
                };

                // This makes the div with id "map_canvas" a google map
                var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
                if (navigator.geolocation) {
                    console.log(navigator.geolocation);
                    mostrarMensaje("obteniendo posición...");
                    navigator.geolocation.getCurrentPosition(function(pos, z) {
                        map.setZoom(10);
                        map.setCenter(new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude));
                        var marker = new google.maps.Marker({
                            position: new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude),
                            map: map,
                            title: "Tu posición"
                        });
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');
                        ocultarMensaje();
                    }, errorPosicionar);
                } else {
                    mostrarMensaje('Tu navegador no soporta geolocalización');
                }


                //geoposicionar();

                $.getJSON(base + '/api/v1/branches/get', function(data) {
                    $.each(data, function (i, suc) {
                        var horario = "";
                        if (suc.BranchHour1 != null && suc.BranchHour2 != null) {
                            if (suc.BranchHour1 == "12:00 AM" && suc.BranchHour2 == "12:00 PM") {
                                horario = "24 Horas";
                            } else {
                                horario = suc.BranchHour1 + " a " + suc.BranchHour2
                            }
                        }
                        dataArray[i] = { "Id": suc.BranchId, "PlaceName": suc.BranchName, "GeoLong": suc.BranchLongitude, "GeoLat": suc.BranchLatitude, "Address": suc.BranchAddress, "City": suc.City.Name, "State": suc.State.Name, "Hour": horario }
                    });
                    $.each(dataArray, function(i, item) {
                        var marker = new google.maps.Marker({
                            'position': new google.maps.LatLng(item.GeoLat, item.GeoLong),
                            'map': map,
                            'title': item.PlaceName
                        });

                        // Make the marker-pin blue!
                        marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');

                        // put in some information about each json object - in this case, the opening hours.
                        var infowindow = new google.maps.InfoWindow({
                            content: "<div class='infoDiv' style='width: 200px; height: 300px;'><h4>" + item.PlaceName + "</h4><hr/><b>Dirección: </b>" + item.Address + "<br> <b>Ciudad: </b>" + item.City + "<br> <b>Estado: </b>" + item.State + " <br><b>Horario: </b>" + item.Hour + "<br></div>"
                        });

                        // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                        google.maps.event.addListener(marker, 'click', function() {
                            infowindow.open(map, marker);
                        });

                    });
                });

                // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins


            }

            /***********************************************
                En esta función se hace la solicitud de geolocalización y el primer
                control para ver si el navegador soporta el servicio
            ***********************************************/

            function geoposicionar(map) {

                if (navigator.geolocation) {
                    mostrarMensaje("obteniendo posición...");
                    navigator.geolocation.getCurrentPosition(centrarMapa, errorPosicionar);
                } else {
                    mostrarMensaje('Tu navegador no soporta geolocalización');
                }
            }

            /***********************************************
                Control de errores en caso de que la llamada
                navigator.geolocation.getCurrentPosition(centrarMapa,errorPosicionar);
                termine generando un error
            ***********************************************/

            function errorPosicionar(error) {
                switch (error.code) {
                case error.TIMEOUT:
                    mostrarMensaje('Request timeout');
                    break;
                case error.POSITION_UNAVAILABLE:
                    mostrarMensaje('Tu posición no está disponible');
                    break;
                case error.PERMISSION_DENIED:
                    mostrarMensaje('Tu navegador ha bloqueado la solicitud de geolocalización');
                    break;
                case error.UNKNOWN_ERROR:
                    mostrarMensaje('Error desconocido');
                    break;
                }
            }

            /***********************************************
                Esta función se ejecuta si la llamada a  navigator.geolocation.getCurrentPosition
                tiene éxito. La latitud y la longitud vienen dentro del objeto coords.
            ***********************************************/

            function centrarMapa(pos, z) {
                map.setZoom(10);
                map.setCenter(new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude));
                var marker = new google.maps.Marker({
                    position: new google.maps.LatLng(pos.coords.latitude, pos.coords.longitude),
                    map: map,
                    title: "Tu posición"
                });
                marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');
                ocultarMensaje();
            }

            /***********************************************
                Gestión de mensajes
            ***********************************************/

            function mostrarMensaje(str) {
                $('#texto').html(str);
                $('#capa_mensajes').css({ "visibility": "visible" });
            }

            function ocultarMensaje() {
                $('#capa_mensajes').css({ "visibility": "hidden" });
            }

        </script>
    </section>
}